<application>
  <component name="EasyCodeSetting">
    <option name="templateGroupMap">
      <map>
        <entry key="Default">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;实体类&quot;)&#10;public class $!{tableInfo.name} implements Serializable {&#10;    private static final long serialVersionUID = $!tool.serial();&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})/**&#10;    * ${column.comment}&#10;    */#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;##使用宏定义实现get,set方法&#10;#getSetMethod($column)&#10;#end&#10;&#10;}" />
                    <option name="name" value="entity.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Dao&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/dao&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 通过ID查询单条数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} queryById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询指定行数据&#10;     *&#10;     * @param offset 查询起始位置&#10;     * @param limit 查询条数&#10;     * @return 对象列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAllByLimit(@Param(&quot;offset&quot;) int offset, @Param(&quot;limit&quot;) int limit);&#10;&#10;&#10;    /**&#10;     * 通过实体作为筛选条件查询&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAll($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 影响行数&#10;     */&#10;    int insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 批量新增数据（MyBatis原生foreach方法）&#10;     *&#10;     * @param entities List&lt;$!{tableInfo.name}&gt; 实例对象列表&#10;     * @return 影响行数&#10;     */&#10;    int insertBatch(@Param(&quot;entities&quot;) List&lt;$!{tableInfo.name}&gt; entities);&#10;&#10;    /**&#10;     * 批量新增或按主键更新数据（MyBatis原生foreach方法）&#10;     *&#10;     * @param entities List&lt;$!{tableInfo.name}&gt; 实例对象列表&#10;     * @return 影响行数&#10;     */&#10;    int insertOrUpdateBatch(@Param(&quot;entities&quot;) List&lt;$!{tableInfo.name}&gt; entities);&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 影响行数&#10;     */&#10;    int update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 影响行数&#10;     */&#10;    int deleteById($!pk.shortType $!pk.name);&#10;&#10;}&#10;" />
                    <option name="name" value="dao.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Service&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务接口&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 通过ID查询单条数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} queryById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询多条数据&#10;     *&#10;     * @param offset 查询起始位置&#10;     * @param limit 查询条数&#10;     * @return 对象列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAllByLimit(int offset, int limit);&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    $!{tableInfo.name} update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功&#10;     */&#10;    boolean deleteById($!pk.shortType $!pk.name);&#10;&#10;}" />
                    <option name="name" value="service.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;ServiceImpl&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service/impl&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;import javax.annotation.Resource;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@Service(&quot;$!tool.firstLowerCase($!{tableInfo.name})Service&quot;)&#10;public class $!{tableName} implements $!{tableInfo.name}Service {&#10;    @Resource&#10;    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;&#10;&#10;    /**&#10;     * 通过ID查询单条数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 实例对象&#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} queryById($!pk.shortType $!pk.name) {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryById($!pk.name);&#10;    }&#10;&#10;    /**&#10;     * 查询多条数据&#10;     *&#10;     * @param offset 查询起始位置&#10;     * @param limit 查询条数&#10;     * @return 对象列表&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; queryAllByLimit(int offset, int limit) {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryAllByLimit(offset, limit);&#10;    }&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} insert($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {&#10;        this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.insert($!tool.firstLowerCase($!{tableInfo.name}));&#10;        return $!tool.firstLowerCase($!{tableInfo.name});&#10;    }&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} update($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {&#10;        this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.update($!tool.firstLowerCase($!{tableInfo.name}));&#10;        return this.queryById($!{tool.firstLowerCase($!{tableInfo.name})}.get$!tool.firstUpperCase($pk.name)());&#10;    }&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功&#10;     */&#10;    @Override&#10;    public boolean deleteById($!pk.shortType $!pk.name) {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Dao.deleteById($!pk.name) &gt; 0;&#10;    }&#10;}" />
                    <option name="name" value="serviceImpl.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Controller&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/controller&quot;))&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;&#10;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表控制层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($tableInfo.name)&quot;)&#10;public class $!{tableName} {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    @Resource&#10;    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;&#10;&#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;selectOne&quot;)&#10;    public $!{tableInfo.name} selectOne($!pk.shortType id) {&#10;        return this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id);&#10;    }&#10;&#10;}" />
                    <option name="name" value="controller.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;Dao.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;&lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao&quot;&gt;&#10;&#10;    &lt;resultMap type=&quot;$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}&quot; id=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;        &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#end&#10;    &lt;/resultMap&gt;&#10;&#10;    &lt;!--查询单个--&gt;&#10;    &lt;select id=&quot;queryById&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from $!{tableInfo.obj.parent.name}.$!tableInfo.obj.name&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--查询指定行数据--&gt;&#10;    &lt;select id=&quot;queryAllByLimit&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from $!{tableInfo.obj.parent.name}.$!tableInfo.obj.name&#10;        limit #{offset}, #{limit}&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--通过实体作为筛选条件查询--&gt;&#10;    &lt;select id=&quot;queryAll&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from $!{tableInfo.obj.parent.name}.$!tableInfo.obj.name&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--新增所有列--&gt;&#10;    &lt;insert id=&quot;insert&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;        values (#foreach($column in $tableInfo.otherColumn)#{$!{column.name}}#if($velocityHasNext), #end#end)&#10;    &lt;/insert&gt;&#10;&#10;    &lt;insert id=&quot;insertBatch&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;        values&#10;        &lt;foreach collection=&quot;entities&quot; item=&quot;entity&quot; separator=&quot;,&quot;&gt;&#10;        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)&#10;        &lt;/foreach&gt;&#10;    &lt;/insert&gt;&#10;&#10;    &lt;insert id=&quot;insertOrUpdateBatch&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)&#10;        values&#10;        &lt;foreach collection=&quot;entities&quot; item=&quot;entity&quot; separator=&quot;,&quot;&gt;&#10;            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)&#10;        &lt;/foreach&gt;&#10;        on duplicate key update&#10;         #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($velocityHasNext), #end#end&#10;    &lt;/insert&gt;&#10;&#10;    &lt;!--通过主键修改数据--&gt;&#10;    &lt;update id=&quot;update&quot;&gt;&#10;        update $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}&#10;        &lt;set&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                $!column.obj.name = #{$!column.name},&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/set&gt;&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/update&gt;&#10;&#10;    &lt;!--通过主键删除--&gt;&#10;    &lt;delete id=&quot;deleteById&quot;&gt;&#10;        delete from $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name} where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/delete&gt;&#10;&#10;&lt;/mapper&gt;&#10;" />
                    <option name="name" value="mapper.xml" />
                  </Template>
                  <Template>
                    <option name="code" value="//调试表原始对象&#10;$!tool.debug($tableInfo.obj)&#10;&#10;//调试列原始对象&#10;$!tool.debug($tableInfo.fullColumn.get(0).obj)&#10;&#10;//调试列原始列类型&#10;$!tool.debug($tableInfo.fullColumn.get(0).obj.dataType)&#10;&#10;//获取原始列类型中的字段&#10;sqlType = $!tool.getField($tableInfo.fullColumn.get(0).obj.dataType, &quot;typeName&quot;)&#10;&#10;//执行原始列类型中的方法&#10;sqlTypeLen = $!tableInfo.fullColumn.get(0).obj.dataType.getLength()&#10;" />
                    <option name="name" value="debug.json" />
                  </Template>
                </list>
              </option>
              <option name="name" value="Default" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="MybatisPlus">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import com.baomidou.mybatisplus.extension.activerecord.Model;&#10;import java.io.Serializable;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表实体类&quot;)&#10;@SuppressWarnings(&quot;serial&quot;)&#10;public class $!{tableInfo.name} extends Model&lt;$!{tableInfo.name}&gt; {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})//${column.comment}#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;#getSetMethod($column)&#10;#end&#10;&#10;#foreach($column in $tableInfo.pkColumn)&#10;    /**&#10;     * 获取主键值&#10;     *&#10;     * @return 主键值&#10;     */&#10;    @Override&#10;    protected Serializable pkVal() {&#10;        return this.$!column.name;&#10;    }&#10;    #break&#10;#end&#10;}" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Dao&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/dao&quot;, &quot;Dao.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dao&quot;)&#10;&#10;import com.baomidou.mybatisplus.core.mapper.BaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表数据库访问层&quot;)&#10;public interface $!{tableName} extends BaseMapper&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="dao" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Service&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service&quot;, &quot;Service.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.IService;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务接口&quot;)&#10;public interface $!{tableName} extends IService&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="service" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;ServiceImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service/impl&quot;, &quot;ServiceImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service.impl&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务实现类&quot;)&#10;@Service(&quot;$!tool.firstLowerCase($tableInfo.name)Service&quot;)&#10;public class $!{tableName} extends ServiceImpl&lt;$!{tableInfo.name}Dao, $!{tableInfo.name}&gt; implements $!{tableInfo.name}Service {&#10;&#10;}" />
                    <option name="name" value="serviceImpl" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Controller&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/controller&quot;, &quot;Controller.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;controller&quot;)&#10;&#10;##定义服务名&#10;#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), &quot;Service&quot;))&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import com.baomidou.mybatisplus.extension.api.ApiController;&#10;import com.baomidou.mybatisplus.extension.api.R;&#10;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;import java.io.Serializable;&#10;import java.util.List;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表控制层&quot;)&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($!tableInfo.name)&quot;)&#10;public class $!{tableName} extends ApiController {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    @Resource&#10;    private $!{tableInfo.name}Service $!{serviceName};&#10;&#10;    /**&#10;     * 分页查询所有数据&#10;     *&#10;     * @param page 分页对象&#10;     * @param $!entityName 查询实体&#10;     * @return 所有数据&#10;     */&#10;    @GetMapping&#10;    public R selectAll(Page&lt;$!tableInfo.name&gt; page, $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.page(page, new QueryWrapper&lt;&gt;($!entityName)));&#10;    }&#10;&#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;{id}&quot;)&#10;    public R selectOne(@PathVariable Serializable id) {&#10;        return success(this.$!{serviceName}.getById(id));&#10;    }&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 新增结果&#10;     */&#10;    @PostMapping&#10;    public R insert(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.save($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 修改结果&#10;     */&#10;    @PutMapping&#10;    public R update(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.updateById($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 删除数据&#10;     *&#10;     * @param idList 主键结合&#10;     * @return 删除结果&#10;     */&#10;    @DeleteMapping&#10;    public R delete(@RequestParam(&quot;idList&quot;) List&lt;Long&gt; idList) {&#10;        return success(this.$!{serviceName}.removeByIds(idList));&#10;    }&#10;}" />
                    <option name="name" value="controller" />
                  </Template>
                </list>
              </option>
              <option name="name" value="MybatisPlus" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="pigx">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import com.baomidou.mybatisplus.annotation.TableName;&#10;import com.baomidou.mybatisplus.extension.activerecord.Model;&#10;import io.swagger.annotations.ApiModel;&#10;import io.swagger.annotations.ApiModelProperty;&#10;import lombok.Data;&#10;import lombok.EqualsAndHashCode;&#10;import java.io.Serializable;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表实体类&quot;)&#10;@Data&#10;@TableName(&quot;$!{tableInfo.originTableName}&quot;)&#10;@EqualsAndHashCode(callSuper = true)&#10;@ApiModel(value = &quot;$!{tableInfo.comment}&quot;)&#10;@SuppressWarnings(&quot;serial&quot;)&#10;public class $!{tableInfo.name} extends Model&lt;$!{tableInfo.name}&gt; {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})&#10;    &#10;    /**&#10;&#9; *  ${column.comment}&#10;&#9; */&#10;    #end&#10;@ApiModelProperty(value=&quot;$!column.comment&quot;)&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.pkColumn)&#10;    /**&#10;     * 获取主键值&#10;     *&#10;     * @return 主键值&#10;     */&#10;    @Override&#10;    protected Serializable pkVal() {&#10;        return this.$!column.name;&#10;    }&#10;    #break&#10;#end&#10;&#10;}" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Service&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service&quot;, &quot;Service.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.IService;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务接口&quot;)&#10;public interface $!{tableName} extends IService&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="service" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;ServiceImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service/impl&quot;, &quot;ServiceImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service.impl&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Mapper;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务实现类&quot;)&#10;@Service(&quot;$!tool.firstLowerCase($tableInfo.name)Service&quot;)&#10;public class $!{tableName} extends ServiceImpl&lt;$!{tableInfo.name}Mapper, $!{tableInfo.name}&gt; implements $!{tableInfo.name}Service {&#10;&#10;}" />
                    <option name="name" value="serviceImpl" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##导入自定义宏&#10;$!custom&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Controller&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/controller&quot;, &quot;Controller.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;controller&quot;)&#10;&#10;##定义服务名&#10;#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), &quot;Service&quot;))&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import com.pig4cloud.pigx.common.core.util.R;&#10;import lombok.RequiredArgsConstructor;&#10;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;import com.pig4cloud.pigx.common.log.annotation.SysLog;&#10;import io.swagger.annotations.ApiOperation;&#10;import org.springframework.security.access.prepost.PreAuthorize;&#10;&#10;import java.io.Serializable;&#10;&#10;import static com.pig4cloud.pigx.common.core.util.R.ok;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表控制层&quot;)&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($!tableInfo.name)&quot;)&#10;@RequiredArgsConstructor&#10;public class $!{tableName} {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    private final $!{tableInfo.name}Service $!{serviceName};&#10;    &#10;&#10;    /**&#10;     * 分页查询所有数据&#10;     *&#10;     * @param page 分页对象&#10;     * @param $!entityName 查询实体&#10;     * @return 分页数据&#10;     */&#10;    @ApiOperation(value = &quot;分页查询&quot;, notes = &quot;分页查询&quot;)&#10;    @GetMapping(&quot;/page&quot; )&#10;    @PreAuthorize(&quot;@pms.hasPermission('$!{moduleName}_$!{entityName}_view')&quot; )&#10;    public R get$!{tableInfo.name}Page(Page&lt;$!tableInfo.name&gt; page, $!tableInfo.name $!entityName) {&#10;        return ok(this.$!{serviceName}.page(page, new QueryWrapper&lt;&gt;($!entityName)));&#10;    }&#10;&#10;    &#10;    /**&#10;     * 通过id查询$!{tableInfo.comment}&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @ApiOperation(value = &quot;通过id查询&quot;, notes = &quot;通过id查询&quot;)&#10;    @GetMapping(&quot;{id}&quot;)&#10;    @PreAuthorize(&quot;@pms.hasPermission('$!{moduleName}_$!{entityName}_view')&quot; )&#10;    public R getById(@PathVariable Serializable id) {&#10;        return ok(this.$!{serviceName}.getById(id));&#10;    }&#10;&#10;    &#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 新增结果&#10;     */&#10;    @ApiOperation(value = &quot;新增$!{tableInfo.comment}&quot;, notes = &quot;新增$!{tableInfo.comment}&quot;)&#10;    @PostMapping&#10;    @SysLog(&quot;新增$!{tableInfo.comment}&quot; )&#10;    @PreAuthorize(&quot;@pms.hasPermission('$!{moduleName}_$!{entityName}_add')&quot; )&#10;    public R insert(@RequestBody $!tableInfo.name $!entityName) {&#10;        return ok(this.$!{serviceName}.save($!entityName));&#10;    }&#10;&#10;&#10;    /**&#10;     * 修改$!{tableInfo.comment}&#10;     * @param $!entityName $!{tableInfo.comment}&#10;     * @return R&#10;     */&#10;    @ApiOperation(value = &quot;修改$!{tableInfo.comment}&quot;, notes = &quot;修改$!{tableInfo.comment}&quot;)&#10;    @SysLog(&quot;修改$!{tableInfo.comment}&quot; )&#10;    @PutMapping&#10;    @PreAuthorize(&quot;@pms.hasPermission('$!{moduleName}_$!{entityName}_edit')&quot; )&#10;    public R updateById(@RequestBody $!tableInfo.name $!entityName) {&#10;        return ok(this.$!{serviceName}.updateById($!entityName));&#10;    }&#10;    &#10;&#10;    /**&#10;     * 通过id删除$!{tableInfo.comment}&#10;     * @param id id&#10;     * @return R&#10;     */&#10;    @ApiOperation(value = &quot;通过id删除$!{tableInfo.comment}&quot;, notes = &quot;通过id删除$!{tableInfo.comment}&quot;)&#10;    @SysLog(&quot;通过id删除$!{tableInfo.comment}&quot; )&#10;    @DeleteMapping(&quot;/{id}&quot; )&#10;    @PreAuthorize(&quot;@pms.hasPermission('$!{moduleName}_$!{entityName}_del')&quot; )&#10;    public R removeById(@PathVariable Serializable id) {&#10;        return ok(this.$!{serviceName}.removeById(id));&#10;    }&#10;    &#10;}" />
                    <option name="name" value="controller" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;Mapper.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;&lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper&quot;&gt;&#10;&#10;    &lt;resultMap id=&quot;BaseResultMap&quot; type=&quot;$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}&quot;&gt;&#10;        &lt;!--@Table $!{tableInfo.originTableName}--&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;        &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#end&#10;    &lt;/resultMap&gt;&#10;&#10;&lt;/mapper&gt;&#10;" />
                    <option name="name" value="mapper.xml" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Mapper&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/mapper&quot;, &quot;Mapper.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;mapper&quot;)&#10;&#10;import com.pig4cloud.pigx.common.data.datascope.PigxBaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表数据库访问层&quot;)&#10;public interface $!{tableName} extends PigxBaseMapper&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="mapper.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##导入自定义宏&#10;$!custom&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($tool.firstLowerCase($!{tableInfo.name}), &quot;_menu.sql&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/tmp&quot;))&#10;&#10;-- 该脚本不要直接执行， 注意维护菜单的父节点ID 默认 父节点1000 , 默认租户 1&#10;&#10;-- 菜单SQL&#10;insert into `sys_menu` ( `parent_id`, `path`, `permission`, `type`, `icon`, `del_flag`, `create_time`, `sort`, `update_time`, `name`, `tenant_id`)&#10;    values ( '1000', '/$!{moduleName}/$!{entityName}/index', '', '0', 'icon-bangzhushouji', '0', '2018-01-20 13:17:19', '8', '2018-07-29 13:38:19', '$!{tableInfo.comment}管理', 1);&#10;&#10;-- 按钮父菜单ID&#10;set @parentId = @@identity;&#10;&#10;-- 菜单对应按钮SQL&#10;insert into `sys_menu` ( `parent_id`, `permission`, `type`, `path`, `icon`, `del_flag`, `create_time`, `sort`, `update_time`, `name`, `tenant_id`)&#10;    SELECT @parentId, '$!{moduleName}_$!{entityName}_view', '1', null, '1',  '0', '2018-05-15 21:35:18', '0', '2018-07-29 13:38:59', '$!{tableInfo.comment}查看', 1;&#10;insert into `sys_menu` ( `parent_id`, `permission`, `type`, `path`, `icon`, `del_flag`, `create_time`, `sort`, `update_time`, `name`, `tenant_id`)&#10;    SELECT @parentId, '$!{moduleName}_$!{entityName}_add', '1', null, '1',  '0', '2018-05-15 21:35:18', '1', '2018-07-29 13:38:59', '$!{tableInfo.comment}新增', 1;&#10;insert into `sys_menu` ( `parent_id`, `permission`, `type`, `path`, `icon`,  `del_flag`, `create_time`, `sort`, `update_time`, `name`, `tenant_id`)&#10;    SELECT @parentId, '$!{moduleName}_$!{entityName}_edit', '1', null, '1',  '0', '2018-05-15 21:35:18', '2', '2018-07-29 13:38:59', '$!{tableInfo.comment}修改', 1;&#10;insert into `sys_menu` ( `parent_id`, `permission`, `type`, `path`, `icon`, `del_flag`, `create_time`, `sort`, `update_time`, `name`, `tenant_id`)&#10;    SELECT @parentId, '$!{moduleName}_$!{entityName}_del', '1', null, '1',  '0', '2018-05-15 21:35:18', '3', '2018-07-29 13:38:59', '$!{tableInfo.comment}删除', 1;&#10;" />
                    <option name="name" value="menu.sql" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##导入自定义宏&#10;$!custom&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{entityName}, &quot;.js&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/tmp/src/api/&quot;, $!moduleName))&#10;&#10;import request from '@/router/axios'&#10;&#10;export function fetchList(query) {&#10;  return request({&#10;    url: '/$!{moduleName}/$!{entityName}/page',&#10;    method: 'get',&#10;    params: query&#10;  })&#10;}&#10;&#10;export function addObj(obj) {&#10;  return request({&#10;    url: '/$!{moduleName}/$!{entityName}',&#10;    method: 'post',&#10;    data: obj&#10;  })&#10;}&#10;&#10;export function getObj(id) {&#10;  return request({&#10;    url: '/$!{moduleName}/$!{entityName}/' + id,&#10;    method: 'get'&#10;  })&#10;}&#10;&#10;export function delObj(id) {&#10;  return request({&#10;    url: '/$!{moduleName}/$!{entityName}/' + id,&#10;    method: 'delete'&#10;  })&#10;}&#10;&#10;export function putObj(obj) {&#10;  return request({&#10;    url: '/$!{moduleName}/$!{entityName}',&#10;    method: 'put',&#10;    data: obj&#10;  })&#10;}" />
                    <option name="name" value="api.js" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{entityName}, &quot;.js&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/tmp/src/const/crud/&quot;, $!moduleName))&#10;&#10;export const tableOption = {&#10;  &quot;border&quot;: true,&#10;  &quot;index&quot;: true,&#10;  &quot;indexLabel&quot;: &quot;序号&quot;,&#10;  &quot;stripe&quot;: true,&#10;  &quot;menuAlign&quot;: &quot;center&quot;,&#10;  &quot;align&quot;: &quot;center&quot;,&#10;  &quot;searchMenuSpan&quot;: 6,&#10;  &quot;column&quot;: [&#10;#foreach ($column in $tableInfo.fullColumn)&#10;&#9;  {&#10;      &quot;type&quot;: &quot;input&quot;,&#10;      &quot;label&quot;: &quot;$column.comment&quot;,&#10;      &quot;prop&quot;: &quot;$column.name&quot;,&#10;      &quot;span&quot;: 12&#10;    }#if($foreach.hasNext),#end&#10;#end&#10;  ]&#10;}&#10;" />
                    <option name="name" value="crud.js" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;##导入自定义宏&#10;$!custom&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;##设置保存名称与保存位置&#10;$!callback.setFileName(&quot;index.vue&quot;)&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/tmp/src/views/&quot;, $!moduleName,&quot;/&quot;,$!entityName))&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&lt;template&gt;&#10;    &lt;div class=&quot;execution&quot;&gt;&#10;        &lt;basic-container&gt;&#10;            &lt;avue-crud ref=&quot;crud&quot;&#10;                       :page=&quot;page&quot;&#10;                       :data=&quot;tableData&quot;&#10;                       :permission=&quot;permissionList&quot;&#10;                       :table-loading=&quot;tableLoading&quot;&#10;                       :option=&quot;tableOption&quot;&#10;                       @on-load=&quot;getList&quot;&#10;                       @search-change=&quot;searchChange&quot;&#10;                       @refresh-change=&quot;refreshChange&quot;&#10;                       @size-change=&quot;sizeChange&quot;&#10;                       @current-change=&quot;currentChange&quot;&#10;                       @row-update=&quot;handleUpdate&quot;&#10;                       @row-save=&quot;handleSave&quot;&#10;                       @row-del=&quot;rowDel&quot;&gt;&#10;            &lt;/avue-crud&gt;&#10;        &lt;/basic-container&gt;&#10;    &lt;/div&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script&gt;&#10;    import {fetchList, getObj, addObj, putObj, delObj} from '@/api/$!{moduleName}/$!{entityName}'&#10;    import {tableOption} from '@/const/crud/$!{moduleName}/$!{entityName}'&#10;    import {mapGetters} from 'vuex'&#10;&#10;    export default {&#10;        name: '$!{entityName}',&#10;        data() {&#10;            return {&#10;                searchForm: {},&#10;                tableData: [],&#10;                page: {&#10;                    total: 0, // 总页数&#10;                    currentPage: 1, // 当前页数&#10;                    pageSize: 20 // 每页显示多少条&#10;                },&#10;                tableLoading: false,&#10;                tableOption: tableOption&#10;            }&#10;        },&#10;        computed: {&#10;            ...mapGetters(['permissions']),&#10;            permissionList() {&#10;                return {&#10;                    addBtn: this.vaildData(this.permissions.${moduleName}_$!{entityName}_add, false),&#10;                    delBtn: this.vaildData(this.permissions.${moduleName}_$!{entityName}_del, false),&#10;                    editBtn: this.vaildData(this.permissions.${moduleName}_$!{entityName}_edit, false)&#10;                };&#10;            }&#10;        },&#10;        methods: {&#10;            getList(page, params) {&#10;                this.tableLoading = true&#10;                fetchList(Object.assign({&#10;                    current: page.currentPage,&#10;                    size: page.pageSize&#10;                }, params, this.searchForm )).then(response =&gt; {&#10;                    this.tableData = response.data.data.records&#10;                    this.page.total = response.data.data.total&#10;                    this.tableLoading = false&#10;                }).catch(() =&gt; {&#10;                    this.tableLoading=false&#10;                })&#10;            },&#10;            rowDel: function (row, index) {&#10;                this.$confirm('是否确认删除ID为' + row.$!pk.name, '提示', {&#10;                    confirmButtonText: '确定',&#10;                    cancelButtonText: '取消',&#10;                    type: 'warning'&#10;                }).then(function () {&#10;                    return delObj(row.$!pk.name)&#10;                }).then(data =&gt; {&#10;                    this.$message.success('删除成功')&#10;                    this.getList(this.page)&#10;                })&#10;            },&#10;            handleUpdate: function (row, index, done,loading) {&#10;                putObj(row).then(data =&gt; {&#10;                    this.$message.success('修改成功')&#10;                    done()&#10;                    this.getList(this.page)&#10;                }).catch(() =&gt; {&#10;                    loading();&#10;                });&#10;            },&#10;            handleSave: function (row, done,loading) {&#10;                addObj(row).then(data =&gt; {&#10;                    this.$message.success('添加成功')&#10;                    done()&#10;                    this.getList(this.page)&#10;                }).catch(() =&gt; {&#10;                    loading();&#10;                });&#10;            },&#10;            sizeChange(pageSize){&#10;                this.page.pageSize = pageSize&#10;            },&#10;            currentChange(current){&#10;                this.page.currentPage = current&#10;            },&#10;            searchChange(form, done) {&#10;                this.searchForm = form&#10;                this.page.currentPage = 1&#10;                this.getList(this.page, form)&#10;                done()&#10;            },&#10;            refreshChange() {&#10;                this.getList(this.page)&#10;            }&#10;        }&#10;    }&#10;&lt;/script&gt;&#10;" />
                    <option name="name" value="index.vue" />
                  </Template>
                </list>
              </option>
              <option name="name" value="pigx" />
            </TemplateGroup>
          </value>
        </entry>
      </map>
    </option>
  </component>
</application>